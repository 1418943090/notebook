
设计模式-

简单工厂模式和工厂方法模式(接口)

模版设计模式(抽象流)
    定义一个算法的骨架，具体实现 放开 由子类实现
    使用灵活多变。


装饰设计模式(IO流)
     使用就是被装饰类的一个子类的实例，在客户端将这个子类的实现交给装饰类。是继承的替代方案
     优点:
         使用装饰模式，可以提供比继承跟灵活的扩展对象的功能，它可以动态的添加对象的功能，并且可以随意的组合这些功能。
         灵活的组合功能
      缺点:
          正是因为可以随意组合，所以就可能出现一些不合理的逻辑。
单例设计模式(多线程)
适配器模式(GUI)
