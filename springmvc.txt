
springmvc
什么是springmvc？ web层
springmvc框架原理(掌握)
   前端控制器，处理器映射器，处理器适配器，视图解析器
springmvc入门程序
    

 springmvc注解开发 (重点掌握)

 参数绑定(简单类型，pojo,集合类型)
 自定义参数绑定(掌握！！！)架构师必备

 springmvc和struct2区别


第二天
  参数绑定(集合类型)
  数据回显
  上传图片
  json

----------------------------------------------
springmvc是spring框架的一个模块 springmvc和spring无需通过中间整合层进行整合

mvc是一种设计模式 

model view controller  

b/s 浏览器/服务器
-------------------------------------------------------
原理分析
前端控制器 servlet  struct2中是filter
DispatcherServlet

model  handler处理器 平常叫做 controller  
handlerMapping 根据url找到 handler

第一步 发送请求到前端控制器
第二步 前端控制器请求HandlerMapping查找Handler
       可根据xml配置，注解进行查找
第三步 处理器映射器HandlerMapping向前端控制器返回Handler
第四步 前端控制器调用处理器适配器去执行Handler
第五步 处理器适配器去执行Handler

第六步 handler执行完成给适配器返回modelandview
第七步 处理器适配器向前端控制器返回modelandview

        modelandview是springmvc框架底层对象 包括model和 view
第八步 前端控制器请求视图解析器去进行视图解析
       根据逻辑视图名解析成真正的视图(jsp)
第九步 视图解析器向前端控制器返回view
第十步 前端控制器进行视图渲染
       视图 渲染将模型数据(在modelandview对象中)填充到request域
第十一步 前端控制器向用户响应
--------------------------------------------------------------------

组件 

1 前端控制器dispatcherservlet(不需要程序员开发)
 作用->接收请求，响应结果。相当于一个转发器。
2 处理器映射器(不需要程序员开发)
 作用->根据请求的url查找handler
3 处理器适配器 handlerAdapter
 作用 按照特定规则(HandlerAdapter要求的规则)去执行handler

4 处理handler (需要程序员开发)!!
 注意 编写handler时按照handleradapter的要求去做，这样适配器才能正确执行handler
5 视图解析器 view resolver(不需要程序员开发)
  作用：进行视图解析，根据逻辑视图名解析成真正的视图(view)
6 视图view (需要程序员开发)!!!
  View是一个接口，实现类支持不同的view类型(JSP，freemarker,pdf)
----------------------------------------------------------------------------
程序猿需要 开发哪些组件
--------------------------------------------------------------------------
 
      <!-- 所有的处理器适配器都实现了handlerAdapter接口 -->
      <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
     //要求handler实现controler接口
     
     ...HttpRequesthandler
     //要求实现HttpRequestHandler请求
       .setAttribute()
       .getRequestDispatcher(jsp路径).forward(request,respone);

        使用此方法可以通过修改response设置响应 的数据格式，比如响应json数据

      <!-- 开启注解模式驱动 --> 
       <mvc:annotation-driven></mvc:annotation-driven>
     
     
     
      <!-- 扫包 -->
      <context:component-scan base-package="com.springmvc.*"></context:component-scan>
      
      <!-- handler -->
      <bean name=" " class=""></bean>
      
      <!-- 处理器映射器 -->
      <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
      <!-- 静态资源过滤 -->
      <mvc:resources location="/resources/" mapping="/resources/**"/>
         <!-- 视图渲染 jsp/freemaker/velocity-->
         <!-- 视图适配器 -->
         <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <!-- 制定页面存放的路径 -->
            <property name="prefix" value="/WEB-INF/pages/"></property>
            <!-- 文件的后缀 -->
            <property name="suffix" value=".jsp"></property>
         </bean>
------------------------------------------------------------------
前端适配器
<servlet>
    <servlet-name>springmvc</servlet-name>
     <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
        <param-name>namespace</param-name>
        <param-value>dispatcher-servlet</param-value>
    </init-param>
</servlet>

<servlet-mapping>
    <servlet-name>springmvc1</servlet-name>
    <url-pattern>/</url-pattern>
 </servlet-mapping>
---------------------------------------------------------------------
多个映射器可以共存
---------------------------------------------------------------------

注解映射器和适配器必须配对使用

------------------------------------------
前端控制器源码 分析 springmvc的执行过程

第一步 前端控制器接收请求
    doDispatch
第二步 handlermapping 根据url返回一个执行链  返回 handler

第三步 处理器适配器执行handler 返回modelandview

第四步 视图渲染 将model数据填充到request域



model就是map
------------------------------------------------------------------------
理解springmvc前端控制器，处理器映射器，处理器适配器，视图解析器用法

前端控制器配置 DispatcherServlet
<servlet-mapping>
    <servlet-name>springmvc1</servlet-name>
    <url-pattern>/</url-pattern>
 </servlet-mapping>
--------------------------------------------------------
处理器映射器  
   非注解处理器映射器(了解)
   注解的处理器映射器(掌握)
    @Controller @RequestMapping

   处理器适配器 处理器映射器
   <mvc:annotation-driven></mvc:annotation-driven>
   ---------------------------------------------------
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
     <!-- 制定页面存放的路径 -->
     <property name="prefix" value="/WEB-INF/pages/"></property>
     <!-- 文件的后缀 -->
     <property name="suffix" value=".jsp"></property>
   </bean>
-----------------------------------------------------------
